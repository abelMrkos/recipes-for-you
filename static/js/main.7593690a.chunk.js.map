{"version":3,"sources":["tempList.js","components/Recipe.js","components/RecipeSearch.js","components/RecipeList.js","tempDetails.js","components/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","Recipe","react_default","a","createElement","Fragment","className","src","this","props","image","style","height","type","onClick","click","href","target","Component","RecipeSearch","onSubmit","handlSubmit","htmlFor","name","placeholder","value","onChange","handlChange","RecipeList","_this","RecipeSearch_RecipeSearch","error","map","rec","Recipe_Recipe","key","detail","recipe","f2f_url","ingredients","publisher_url","RecipeDetails","state","url","concat","id","_this$state$recipe","back","i","index","App","list","search","base_url","query","hadlChange","e","setState","preventDefault","_this$state","getRecipes","fetch","data","json","jsonData","length","RecipeList_RecipeList","RecipeDetails_RecipeDetails","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7593690a.chunk.js","sourcesContent":["export const recipes = [\n  {\n    recipe_id: 35382,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35383,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35384,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  }\n];\n","import React, { Component } from 'react'\r\n\r\nexport default class Recipe extends Component {\r\n  render() {\r\n   \r\n    return (\r\n        <React.Fragment>\r\n          <div className= 'col-10 mx-auto col-md-6 col-lg-4 my-3'>\r\n          <div className= 'card'>\r\n         <img src={this.props.image} \r\n            className = 'img-card-top'\r\n            style={{height:'14rem'}} \r\n            />\r\n            <div className = 'card-body text-capitalize'>\r\n            <h5 className = 'text-slanted'>{this.props.title}</h5>\r\n            <h6 className = 'text-slanted'>Provided by {this.props.publisher}</h6>\r\n\r\n            </div>\r\n            <div className = 'card-footer'>\r\n            <button type='button'\r\n             className ='btn btn-primary'\r\n             onClick = {this.props.click}>Details</button>\r\n            <a href ={this.props.source_url} target='_blank'className = 'btn btn-success mx-2'>Recipe URL</a>\r\n            </div>\r\n          </div>\r\n          </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class RecipeSearch extends Component {\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <div className = 'container'>\r\n          <div className = 'row'>\r\n          <div className = 'col-10 mx-auto col-md-8 mt-5 text-center'>\r\n          <h1 className = 'text-capitalize text-slanted'>search for recipe with{' '}\r\n          <strong className = 'text-danger'>food2fork API</strong></h1>\r\n          <form className = 'my-5' onSubmit = {this.props.handlSubmit}>\r\n          <label htmlFor = 'search' className = 'text-capitalize'>\r\n          type recipes separated by comma</label>\r\n          <div className = 'input-group'>\r\n          <input type = 'text' name = 'search' placeholder = 'chiken,onions,carrots' \r\n          className = 'form-control'\r\n          value = {this.props.value}\r\n          onChange = {this.props.handlChange}/>\r\n          <div className = 'input-group-append'>\r\n          <button className = 'input-group-text bg-primary text-white'>\r\n          <i className = 'fas fa-search' />\r\n          </button>\r\n          </div>\r\n          </div>\r\n          </form>\r\n          \r\n          </div>\r\n          </div>\r\n          </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Recipe from './Recipe';\r\nimport RecipeSearch from './RecipeSearch'\r\n\r\nexport default class RecipeList extends Component {\r\n  render() {\r\n     const {recipes} = this.props;\r\n     //const recipess = recipes.filter(r=>r.title !== null)\r\n     \r\n  \r\n    return (\r\n      <React.Fragment>\r\n          <RecipeSearch value = {this.props.value}\r\n          handlChange = {this.props.handlChange}\r\n          handlSubmit = {this.props.handlSubmit} />\r\n          <div className = 'container'>\r\n          <div className = 'row'>\r\n          <div className = 'col-10 mx-auto col-md-6 text-center text-uppercase mb-3'>\r\n          <h1 className = 'text-slanted'>recipe list</h1>\r\n          </div>\r\n          </div>\r\n          <div className = 'row'>\r\n          {\r\n              this.props.error?<h1 className = 'text-center text-danger'>{this.props.error}</h1>:\r\n              this.props.recipes.map(rec=>{\r\n                  return <Recipe key={rec.recipe_id}\r\n                   image={rec.image_url}\r\n                   title={rec.title}\r\n                   publisher={rec.publisher}\r\n                   source_url={rec.source_url} \r\n                   click={()=>this.props.detail(rec.recipe_id)}\r\n                   />\r\n              })\r\n          }\r\n          </div>\r\n          </div>\r\n          \r\n          <Recipe />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","export const recipe = {\n  f2f_url: \"http://food2fork.com/view/35388\",\n  image_url:\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n  ingredients: [\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\n    \"2 slices sour dough bread\",\n    \"1 tablespoon butter, room temperature\",\n    \"2 tablespoons cream cheese, room temperature\",\n    \"1/2 cup jack and cheddar cheese, shredded\",\n    \"1 tablespoon tortilla chips, crumbled\"\n  ],\n  publisher: \"Closet Cooking\",\n  publisher_url: \"http://closetcooking.com\",\n  source_url:\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\n};\n","import React, { Component } from 'react'\r\nimport {recipe} from '../tempDetails'\r\n\r\nexport default class RecipeDetails extends Component {\r\n    state = {\r\n        recipe:recipe,\r\n        url:`https://www.food2fork.com/api/get?key=bf3cf9e1379e9df66ea9f70e81b14360&rId=${this.props.id}`\r\n    }\r\n    /*async componentDidMount(){\r\n        try{\r\n            const data = await fetch(this.state.url);\r\n            const jsonData = await data.json();\r\n            this.setState({recipe:jsonData.recipe})\r\n          }catch(error){\r\n            console.log(error);\r\n          }\r\n    }\r\n    */\r\n  render() {\r\n      const {    image_url,\r\n                 publisher,\r\n                 publisher_url,\r\n                 source_url,\r\n                 title,\r\n                 ingredients\r\n    } = this.state.recipe\r\n    return (\r\n        <React.Fragment>\r\n          <div className = 'container'>\r\n          <div className = 'row'>\r\n          <div className = 'col-10 mx-auto col-md-6 my-5'>\r\n          <button className = 'btn btn-warning mb-3'\r\n          onClick={this.props.back}>Back To Recipe List</button>\r\n          <img src={image_url} className ='d-block w-100' />\r\n          </div>\r\n          <div className = 'col-1o mx-auto col-md-6 my-5'>\r\n          <h5 className = 'text-uppercase'>{title}</h5>\r\n          <h6 className = 'text-capitalize text-slanted text-primary'>provided by {publisher}</h6>\r\n          <a href ={publisher_url} target='_blank'className = 'btn btn-success mx-2 mt-3'>Publisher Web Page</a>\r\n          <a href ={source_url} target='_blank'className = 'btn btn-success mx-2 mt-3'>Recipe URL</a>\r\n          \r\n          <ul className = 'list-group mt-4'>\r\n          <h2 className=\"mt-3 mb-4\">Ingredients</h2>\r\n          {\r\n           ingredients.map((i,index)=>{\r\n              return <li key={index} className=\"list-group-item text-slanted\">{i}</li>\r\n           })   \r\n          }\r\n          </ul>\r\n\r\n          </div>\r\n          </div>\r\n          </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport {recipes} from './tempList';\nimport RecipeList from './components/RecipeList';\nimport RecipeDetails from './components/RecipeDetails';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends Component {\n  state={\n    recipes:recipes,\n    url:'https://www.food2fork.com/api/search?key=bf3cf9e1379e9df66ea9f70e81b14360',\n    detail:35388,\n    list:true,\n    search:'',\n    base_url:'https://www.food2fork.com/api/search?key=bf3cf9e1379e9df66ea9f70e81b14360',\n    query:'&q=',\n    error:''\n  }\n  hadlChange = e=>{\n    \nthis.setState({search:e.target.value})\n  }\n  handlSubmit = e => {\n    e.preventDefault()\n    const{search,query,base_url} = this.state;\nthis.setState(()=>{\n  return {url:`${base_url}${query}${search}`,search:''}\n},()=>{\nthis.getRecipes();\n})\n  }\n  async getRecipes(){\n    try{\n      const data = await fetch(this.state.url);\n      const jsonData = await data.json();\n      if(jsonData.recipes.length === 0){\n        this.setState({error:'Sorry No Result Found For Your Search'})\n      }else{\n        this.setState({recipes:jsonData.recipes})\n      }\n    }catch(error){\n      \n    }\n    \n  }/*\n  componentDidMount(){\n    this.getRecipes();\n  }\n  \n  \n  */\n  detail = (id)=>{\nthis.setState({detail:id,list:false})\n  }\n  back = ()=>{\n    this.setState({list:true})\n      }\n  render() {\n    \n       return (\n      <div >\n        {this.state.list?<RecipeList \n        recipes={this.state.recipes} \n        detail={this.detail} \n        value ={this.state.search}\n        handlChange = {this.hadlChange}\n        handlSubmit = {this.handlSubmit}\n        error = {this.state.error}/>:\n        <RecipeDetails id={this.state.detail} back={this.back} />}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}